{"version":3,"sources":["assets/memeBGM.mp3","assets/bell.mp3","App.js","reportWebVitals.js","index.js"],"names":["App","useState","meme","setMeme","currentMeme","setCurrentMeme","nextMeme","setNextMeme","seconds","setSeconds","displayCurrent","setDisplayCurrent","length","setLength","WEEK_IN_MS","TEN_MIN_IN_MS","onMusic","setOnMusic","Audio","memeBGM","bgm","auth","setAuth","pass","setPass","shuffle","array","randomIndex","currentIndex","Math","floor","random","useEffect","getData","setTimeout","media","console","log","fetch","then","res","json","data","Object","keys","title","shuffleMeme","i","push","score","isFound","updateData","timeLeft","currentTime","Date","getTime","execTime","setHours","setInterval","className","style","height","display","replace","alt","src","onError","e","target","onerror","onClick","pause","play","loop","marginTop","onChange","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc356a56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/memeBGM.4ff86e69.mp3\";","export default __webpack_public_path__ + \"static/media/bell.05d85813.mp3\";","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport memeBGM from \"./assets/memeBGM.mp3\";\nimport useSound from 'use-sound';\nimport bellSound from \"./assets/bell.mp3\"\n\n\nfunction App() {\n  const [meme,setMeme] = useState([])\n  const [currentMeme,setCurrentMeme] = useState(0)\n  const [nextMeme,setNextMeme] = useState(currentMeme+1)\n  const [seconds,setSeconds] = useState(15)\n  const [displayCurrent, setDisplayCurrent] = useState(true)\n  const [length,setLength] = useState()\n  const CLOCK = 15\n  const WEEK_IN_MS = 604800000\n  const TEN_MIN_IN_MS = 600000\n  const [onMusic,setOnMusic] = useState(false)\n  const [bgm, setBgm] = useState(new Audio(memeBGM))\n  const [auth,setAuth] = useState(false)\n  const [pass,setPass] = useState()\n\n  const play = () => {\n    if(onMusic){\n      setOnMusic(false)\n      bgm.pause()\n    }\n    else{\n      setOnMusic(true)\n      bgm.play()\n      bgm.loop = true\n    \n    }\n      \n      \n  }\n\n  useEffect(() => {\n      getData()\n  },[])\n\n\n  useEffect(() => {\n    setTimeout(() => {\n      if(seconds!==0){\n      setSeconds(seconds-1)}\n      else{\n        if(displayCurrent){\n          setDisplayCurrent(false)\n          if(length>(nextMeme+1)){\n\n            setCurrentMeme(nextMeme+1)\n            while(!meme[currentMeme].media && meme[currentMeme].media===''){\n              setCurrentMeme(nextMeme+1)\n            }\n          \n          }\n          else{\n            setMeme(shuffle(meme))\n            setCurrentMeme(0)\n          }\n\n        }\n        else{\n          setDisplayCurrent(true)\n          if(length>(currentMeme+1)){\n            setNextMeme(currentMeme+1)\n            while(!meme[nextMeme].media && meme[nextMeme].media===''){\n              setCurrentMeme(nextMeme+1)\n            }\n          \n          }\n          else{\n            setMeme(shuffle(meme))\n            setNextMeme(0)\n          }\n        }\n        setSeconds(CLOCK)\n        \n      }\n    }, 1000);\n    \n  }, [seconds])\n\n  useEffect(()=>{\n    console.log(meme)\n  },[meme])\n\n  function shuffle(array) {\n    let currentIndex = array.length\n    let randomIndex\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    \n    return array\n      \n    }\n\n    const getData = () => {\n      fetch(\"/members\").then(\n        res => res.json()\n      )\n      .then(data => {\n        setLength(Object.keys(data.title).length)\n        let shuffleMeme = []\n        for (var i =0; i<Object.keys(data.title).length; i++){\n      //   setMeme(preState => [\n      //     ...preState, {media:data.media['?',i],\n      //   score:data.score['?',i],\n      // title:data.title['?',i]}\n      //   ])\n  \n          shuffleMeme.push({media:data.media['?',i],\n             score:data.score['?',i],\n           title:data.title['?',i]})\n  \n  \n      }\n      setMeme(shuffle(shuffleMeme))\n      if(shuffleMeme.length > 0) {\n        fetch(\"/checkImage?src=\"+shuffleMeme[currentMeme].media)\n        .then(res => {\n          return res.json()\n        })\n        .then(isFound => {\n          console.log(isFound)\n          if (isFound === 404){\n            setCurrentMeme(currentMeme+1)\n            setNextMeme(currentMeme+2)\n            console.log(\"skipped\")\n          }\n        }) \n      }\n      if(shuffleMeme.length > 0) {\n        fetch(\"/checkImage?src=\"+shuffleMeme[nextMeme].media)\n        .then(res => {\n          return res.json()\n        })\n        .then(isFound => {\n          console.log(isFound)\n          if (isFound === 404){\n            setNextMeme(nextMeme+1)\n            console.log(\"skipped\")\n          }\n        }) \n      }\n      })\n    }\n\n    const updateData = () => {\n      fetch(\"/updateMeme\")\n    }\n\n    useEffect(() => {\n\n      const currentTime = new Date().getTime();  //current unix timestamp\n      const execTime = new Date().setHours(23,30,0);  //API call time = today at 20:00\n      let timeLeft;\n      if(currentTime < execTime) {\n        //it's currently earlier than 20:00\n        timeLeft = execTime - currentTime;\n      } else {\n        //it's currently later than 20:00, schedule for tomorrow at 20:00\n        timeLeft = execTime + WEEK_IN_MS - currentTime\n      }\n      console.log(timeLeft)\n      \n      setTimeout(function() {\n\n        updateData()\n          setTimeout(function() {\n            getData()\n          }, TEN_MIN_IN_MS)\n\n        setInterval(function() {\n          updateData()\n          setTimeout(function() {\n            getData()\n          }, TEN_MIN_IN_MS)\n    \n        }, WEEK_IN_MS);  //repeat every week\n      }, timeLeft);  //wait until 20:00 as calculated above\n    },[])\n\n    useEffect(() => {\n      if(meme.length > 0) {\n      fetch(\"/checkImage?src=\"+meme[currentMeme].media)\n      .then(res => {\n        return res.json()\n      })\n      .then(isFound => {\n        console.log(isFound)\n        if (isFound === 404){\n          if(length>(currentMeme+2)){\n          setCurrentMeme(currentMeme+1)\n          setNextMeme(currentMeme+2)\n          console.log(\"skipped\")\n          }\n          else{\n            setMeme(shuffle(meme))\n            setCurrentMeme(0)\n          }\n        }\n      }) \n    }\n    },[currentMeme])\n\n    useEffect(() => {\n      if(meme.length > 0) {\n        fetch(\"/checkImage?src=\"+meme[nextMeme].media)\n        .then(res => {\n          return res.json()\n        })\n        .then(isFound => {\n          console.log(isFound)\n          if (isFound === 404){\n            if(length>(nextMeme+2)){\n              setNextMeme(nextMeme+1)\n              setCurrentMeme(nextMeme+2)\n              console.log(\"skipped\")\n            }\n            else{\n              setMeme(shuffle(meme))\n              setNextMeme(0)\n            }\n          }\n        })\n      }\n       \n    },[nextMeme])\n\n\n  return (\n    <div className=\"App\">\n    \n\n      {auth?\n      <div>\n       <header className=\"App-header\">\n       {meme[currentMeme+1]?        <div style={{height:\"950px\"}}>\n \n         <div  style={displayCurrent?{height:\"950px\"}:{height:\"950px\",display:'none'}}>\n             <h3>{meme[currentMeme].title.replace(\"fuck\",\"****\").replace(\"shit\",\"****\").replace(\"Bitch\",\"*****\").replace(\"Fuck\",\"****\").replace(\"Shit\",\"****\").replace(\"Bitch\",\"*****\").replace(\"FUCK\",\"****\").replace(\"SHIT\",\"****\").replace(\"BITCH\",\"*****\").replace(\"cunt\",\"****\").replace(\"CUNT\",\"****\").replace(\"Cunt\",\"****\").replace(\"nigger\",\"*****\").replace(\"NIGGER\",\"*****\").replace(\"Nigger\",\"******\")}</h3>\n             <div className='memeBox'>\n             <img alt=\"current meme\" src={meme[currentMeme].media} onError={(e) => {\n               if(length>(currentMeme+1)){\n               if(currentMeme > nextMeme){\n                 setCurrentMeme(currentMeme+1)\n               }\n               \n               console.log(meme[currentMeme].media)\n               console.log(\"error img\")\n               e.target.onerror = null\n               e.target.src=meme[currentMeme].media\n             }\n             else{\n               setMeme(shuffle(meme))\n               setCurrentMeme(0)\n               console.log(\"error img\")\n               e.target.onerror = null\n               e.target.src=meme[currentMeme].media\n             }}}></img>\n             </div>\n             </div>\n \n             <div style={displayCurrent?{height:\"950px\",display:'none'}:{height:\"950px\"}}>\n             <h3>{meme[nextMeme].title.replace(\"fuck\",\"****\").replace(\"shit\",\"****\").replace(\"Bitch\",\"*****\").replace(\"Fuck\",\"****\").replace(\"Shit\",\"****\").replace(\"Bitch\",\"*****\").replace(\"FUCK\",\"****\").replace(\"SHIT\",\"****\").replace(\"BITCH\",\"*****\").replace(\"cunt\",\"****\").replace(\"CUNT\",\"****\").replace(\"Cunt\",\"****\").replace(\"nigger\",\"*****\").replace(\"NIGGER\",\"*****\").replace(\"Nigger\",\"******\")}</h3>\n             <div className='memeBox'>\n             <img alt=\"next meme\" src={meme[nextMeme].media} onError={(e) => {\n               if(length>(nextMeme+1)){\n                 setNextMeme(nextMeme+1)\n                 console.log(meme[nextMeme].media)\n                 console.log(\"error img\")\n                 e.target.onerror = null\n                 e.target.src=meme[nextMeme].media\n               }\n               else{\n                 setMeme(shuffle(meme))\n                 setNextMeme(0)\n                 console.log(\"error img\")\n                 e.target.onerror = null\n                 e.target.src=meme[nextMeme].media\n               }\n             }}></img>\n             </div>\n             </div>\n           </div>:null}\n         <span className=\"timer\">{seconds}</span>\n       </header>\n \n       {/* <img src={\"https://i.redd.it/rs7pju6muo881.jpg\"} \n       onError={({ currentTarget }) => {\n         currentTarget.onerror = null; // prevents looping\n         currentTarget.src=\"https://i.redd.it/u6anbsaoed381.jpg\";\n       }}\n       \n     ></img> */}\n \n <button onClick={play} style={{marginTop:1000}}>Boop!</button>\n </div>\n:<div>Password: <input onChange={({target:{value}}) => {\n  setPass(value)\n}}></input> <button onClick={() => {\n  if(pass === \"goodfun\") {\n    setAuth(true)\n  }\n  else{\n    setAuth(false)\n  }\n}}>submit</button></div>\n\n}\n\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}