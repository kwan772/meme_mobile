{"ast":null,"code":"var _jsxFileName = \"/Users/kevii/Desktop/memeApp/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport papaparse from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [meme, setMeme] = useState([]);\n  useEffect(() => {\n    fetch(\"/members\").then(res => res.json()).then(data => {\n      for (var i = 0; i < Object.keys(data.title).length; i++) {\n        setMeme(preState => [...preState, {\n          media: data.media[Number.toString(i)],\n          score: data.score[Number.toString(i)],\n          title: data.title[Number.toString(i)]\n        }]);\n      }\n\n      console.log(data);\n      console.log(Object.keys(data.title).length);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(meme);\n  }, [meme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: meme[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme[0].media\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RLaplA76p5wglcIaZ76SrlLy5Bw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kevii/Desktop/memeApp/my-app/src/App.js"],"names":["React","useState","useEffect","papaparse","App","meme","setMeme","fetch","then","res","json","data","i","Object","keys","title","length","preState","media","Number","toString","score","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAC,UAAD,CAAL,CAAkBC,IAAlB,CACEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADT,EAGCF,IAHD,CAGMG,IAAI,IAAI;AACZ,WAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAACC,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,EAAwBC,MAAzC,EAAiDJ,CAAC,EAAlD,EAAqD;AACrDN,QAAAA,OAAO,CAACW,QAAQ,IAAI,CAClB,GAAGA,QADe,EACL;AAACC,UAAAA,KAAK,EAACP,IAAI,CAACO,KAAL,CAAWC,MAAM,CAACC,QAAP,CAAgBR,CAAhB,CAAX,CAAP;AACfS,UAAAA,KAAK,EAACV,IAAI,CAACU,KAAL,CAAWF,MAAM,CAACC,QAAP,CAAgBR,CAAhB,CAAX,CADS;AAEjBG,UAAAA,KAAK,EAACJ,IAAI,CAACI,KAAL,CAAWI,MAAM,CAACC,QAAP,CAAgBR,CAAhB,CAAX;AAFW,SADK,CAAb,CAAP;AAKD;;AACDU,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,EAAwBC,MAApC;AACC,KAbD;AAeD,GAhBQ,EAgBP,EAhBO,CAAT;AAkBAd,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACD,GAFQ,EAEP,CAACA,IAAD,CAFO,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAAC,CAAD,CAAJ,CAAQU;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAEV,IAAI,CAAC,CAAD,CAAJ,CAAQa;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAjCQd,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport papaparse from 'papaparse'\n\n\nfunction App() {\n  const [meme,setMeme] = useState([])\n\n  useEffect(() => {\n    fetch(\"/members\").then(\n      res => res.json()\n    )\n    .then(data => {\n      for (var i =0; i<Object.keys(data.title).length; i++){\n      setMeme(preState => [\n        ...preState, {media:data.media[Number.toString(i)],\n      score:data.score[Number.toString(i)],\n    title:data.title[Number.toString(i)]}\n      ])\n    }\n    console.log(data)\n    console.log(Object.keys(data.title).length)\n    })\n\n  },[])\n\n  useEffect(() => {\n    console.log(meme)\n  },[meme])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h3>{meme[0].title}</h3>\n        <img src={meme[0].media}></img>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}