{"ast":null,"code":"var _jsxFileName = \"/Users/kevii/Desktop/memeApp/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [meme, setMeme] = useState([]);\n  const [currentMeme, setCurrentMeme] = useState(2);\n  const [nextMeme, setNextMeme] = useState(currentMeme + 1);\n  const [seconds, setSeconds] = useState(15);\n  const [displayCurrent, setDisplayCurrent] = useState(true);\n  const [length, setLength] = useState();\n  useEffect(() => {\n    fetch(\"/members\").then(res => res.json()).then(data => {\n      setLength(Object.keys(data.title).length);\n      let shuffleMeme = [];\n\n      for (var i = 0; i < Object.keys(data.title).length; i++) {\n        //   setMeme(preState => [\n        //     ...preState, {media:data.media['?',i],\n        //   score:data.score['?',i],\n        // title:data.title['?',i]}\n        //   ])\n        shuffleMeme.push({\n          media: data.media[('?', i)],\n          score: data.score[('?', i)],\n          title: data.title[('?', i)]\n        });\n      }\n\n      console.log(shuffle(shuffleMeme));\n      setMeme(shuffle(shuffleMeme));\n      console.log(Object.keys(data.title).length);\n    });\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      if (seconds !== 0) {\n        setSeconds(seconds - 1);\n      } else {\n        if (displayCurrent) {\n          setDisplayCurrent(false);\n\n          if (length > nextMeme + 1) {\n            setCurrentMeme(nextMeme + 1);\n\n            while (!meme[currentMeme].media && meme[currentMeme].media === '') {\n              setCurrentMeme(nextMeme + 1);\n              console.log(\"!!!!!!!!!\");\n            }\n          } else {\n            setCurrentMeme(0);\n          }\n        } else {\n          setDisplayCurrent(true);\n\n          if (length > currentMeme + 1) {\n            setNextMeme(currentMeme + 1);\n\n            while (!meme[nextMeme].media && meme[nextMeme].media === '') {\n              setCurrentMeme(nextMeme + 1);\n              console.log(\"!!!!!!!!!\");\n            }\n          } else {\n            setNextMeme(0);\n          }\n        }\n\n        setSeconds(15);\n      }\n    }, 1000);\n  }, [seconds]);\n  useEffect(() => {\n    console.log(meme);\n  }, [meme]);\n\n  function shuffle(array) {\n    let currentIndex = array.length;\n    let randomIndex;\n\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [meme[currentMeme + 1] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: displayCurrent ? null : {\n            display: 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: meme[currentMeme].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: meme[currentMeme].media,\n            onError: e => {\n              setCurrentMeme(currentMeme + 1);\n              console.log(\"error img\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: displayCurrent ? {\n            display: 'none'\n          } : null,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: meme[nextMeme].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: meme[nextMeme].media,\n            onError: e => {\n              setNextMeme(nextMeme + 1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 36\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"timer\",\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/HjFPJJjldUuSAPxVEJx8s52L6w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kevii/Desktop/memeApp/my-app/src/App.js"],"names":["React","useState","useEffect","App","meme","setMeme","currentMeme","setCurrentMeme","nextMeme","setNextMeme","seconds","setSeconds","displayCurrent","setDisplayCurrent","length","setLength","fetch","then","res","json","data","Object","keys","title","shuffleMeme","i","push","media","score","console","log","shuffle","setTimeout","array","currentIndex","randomIndex","Math","floor","random","display","e"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\n\nfunction App() {\n  const [meme,setMeme] = useState([])\n  const [currentMeme,setCurrentMeme] = useState(2)\n  const [nextMeme,setNextMeme] = useState(currentMeme+1)\n  const [seconds,setSeconds] = useState(15)\n  const [displayCurrent, setDisplayCurrent] = useState(true)\n  const [length,setLength] = useState()\n\n  useEffect(() => {\n    fetch(\"/members\").then(\n      res => res.json()\n    )\n    .then(data => {\n      setLength(Object.keys(data.title).length)\n      let shuffleMeme = []\n      for (var i =0; i<Object.keys(data.title).length; i++){\n    //   setMeme(preState => [\n    //     ...preState, {media:data.media['?',i],\n    //   score:data.score['?',i],\n    // title:data.title['?',i]}\n    //   ])\n\n        shuffleMeme.push({media:data.media['?',i],\n           score:data.score['?',i],\n         title:data.title['?',i]})\n\n\n    }\n    console.log(shuffle(shuffleMeme))\n    setMeme(shuffle(shuffleMeme))\n    console.log(Object.keys(data.title).length)\n    })\n\n  },[])\n\n  useEffect(() => {\n    setTimeout(() => {\n      if(seconds!==0){\n      setSeconds(seconds-1)}\n      else{\n        if(displayCurrent){\n          setDisplayCurrent(false)\n          if(length>(nextMeme+1)){\n\n            setCurrentMeme(nextMeme+1)\n            while(!meme[currentMeme].media && meme[currentMeme].media===''){\n              setCurrentMeme(nextMeme+1)\n              console.log(\"!!!!!!!!!\")\n            }\n          \n          }\n          else{\n            setCurrentMeme(0)\n          }\n\n        }\n        else{\n          setDisplayCurrent(true)\n          if(length>(currentMeme+1)){\n            setNextMeme(currentMeme+1)\n            while(!meme[nextMeme].media && meme[nextMeme].media===''){\n              setCurrentMeme(nextMeme+1)\n              console.log(\"!!!!!!!!!\")\n            }\n          \n          }\n          else{\n            setNextMeme(0)\n          }\n        }\n        setSeconds(15)\n        \n      }\n    }, 1000);\n    \n  }, [seconds])\n\n  useEffect(()=>{\n    console.log(meme)\n  },[meme])\n\n  function shuffle(array) {\n    let currentIndex = array.length\n    let randomIndex\n\n    while (currentIndex != 0) {\n\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    \n    return array\n      \n    }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      {meme[currentMeme+1]?        <div>\n\n        <div style={displayCurrent?null:{display:'none'}}>\n            <h3>{meme[currentMeme].title}</h3>\n            <img src={meme[currentMeme].media} onError={(e) => {\n              setCurrentMeme(currentMeme+1)\n              console.log(\"error img\")\n            }}></img>\n            </div>\n\n            <div style={displayCurrent?{display:'none'}:null}>\n            <h3>{meme[nextMeme].title}</h3>\n            <img src={meme[nextMeme].media} onError={(e) => {\n              setNextMeme(nextMeme+1)\n            }}></img>\n            </div>\n          </div>:null}\n        <span className=\"timer\">{seconds}</span>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}